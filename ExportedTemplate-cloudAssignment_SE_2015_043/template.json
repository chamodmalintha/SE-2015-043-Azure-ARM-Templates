{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vulnerabilityAssessments_Default_storageContainerPath": {
            "type": "SecureString"
        },
        "Redis_redis_se_2015_043_name": {
            "defaultValue": "redis-se-2015-043",
            "type": "String"
        },
        "servers_server_se_2015_043_name": {
            "defaultValue": "server-se-2015-043",
            "type": "String"
        },
        "sites_function_se_2015_043_name": {
            "defaultValue": "function-se-2015-043",
            "type": "String"
        },
        "sites_webApp01_se_2015_043_name": {
            "defaultValue": "webApp01-se-2015-043",
            "type": "String"
        },
        "sites_webApp02_se_2015_043_name": {
            "defaultValue": "webApp02-se-2015-043",
            "type": "String"
        },
        "vaults_keyVault_se_2015_043_name": {
            "defaultValue": "keyVault-se-2015-043",
            "type": "String"
        },
        "frontdoors_frontdoor_se_2015_043_name": {
            "defaultValue": "frontdoor-se-2015-043",
            "type": "String"
        },
        "storageAccounts_storageaccount043_name": {
            "defaultValue": "storageaccount043",
            "type": "String"
        },
        "serverfarms_AppServicePlan_se_2015_043_name": {
            "defaultValue": "AppServicePlan-se-2015-043",
            "type": "String"
        },
        "components_webApp02insights_se_2015_043_name": {
            "defaultValue": "webApp02insights-se-2015-043",
            "type": "String"
        },
        "components_webApp01_insights__se_2105_043_name": {
            "defaultValue": "webApp01-insights -se-2105-043",
            "type": "String"
        },
        "components_functionAppInsights_se_2015_043_name": {
            "defaultValue": "functionAppInsights-se-2015-043",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "frontdoorwebapplicationfirewallpolicies_FirewallPolicySE043_name": {
            "defaultValue": "FirewallPolicySE043",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___webapp02insights_se_2015_043_name": {
            "defaultValue": "failure anomalies - webapp02insights-se-2015-043",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___webapp01_insights__se_2105_043_name": {
            "defaultValue": "failure anomalies - webapp01-insights -se-2105-043",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___functionappinsights_se_2015_043_name": {
            "defaultValue": "failure anomalies - functionappinsights-se-2015-043",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2019-07-01",
            "name": "[parameters('Redis_redis_se_2015_043_name')]",
            "location": "Southeast Asia",
            "properties": {
                "sku": {
                    "name": "Basic",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": false,
                "redisConfiguration": {
                    "maxclients": "256",
                    "maxmemory-reserved": "2",
                    "maxfragmentationmemory-reserved": "12",
                    "maxmemory-delta": "2"
                }
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "SmartDetect",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": []
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('components_functionAppInsights_se_2015_043_name')]",
            "location": "southeastasia",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('components_webApp01_insights__se_2105_043_name')]",
            "location": "southeastasia",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[parameters('components_webApp02insights_se_2015_043_name')]",
            "location": "southeastasia",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2016-10-01",
            "name": "[parameters('vaults_keyVault_se_2015_043_name')]",
            "location": "southeastasia",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "aa232db2-7a78-4414-a529-33db9124cba7",
                "accessPolicies": [
                    {
                        "tenantId": "aa232db2-7a78-4414-a529-33db9124cba7",
                        "objectId": "b85e5eff-e204-4960-91ac-de45ae2341d5",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": []
                        }
                    },
                    {
                        "tenantId": "aa232db2-7a78-4414-a529-33db9124cba7",
                        "objectId": "9e08de81-ba77-4e0f-8d2a-f991b1ed133c",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true
            }
        },
        {
            "type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
            "apiVersion": "2020-04-01",
            "name": "[parameters('frontdoorwebapplicationfirewallpolicies_FirewallPolicySE043_name')]",
            "location": "Global",
            "properties": {
                "policySettings": {
                    "enabledState": "Enabled",
                    "mode": "Prevention",
                    "redirectUrl": "https://frontdoor-se-2015-043.azurefd.net",
                    "customBlockResponseStatusCode": 403
                },
                "customRules": {
                    "rules": []
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "DefaultRuleSet",
                            "ruleSetVersion": "1.0",
                            "ruleGroupOverrides": [],
                            "exclusions": []
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2019-06-01-preview",
            "name": "[parameters('servers_server_se_2015_043_name')]",
            "location": "southeastasia",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "admin-se-2015-043",
                "version": "12.0",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_storageaccount043_name')]",
            "location": "southeastasia",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_AppServicePlan_se_2015_043_name')]",
            "location": "Southeast Asia",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 0
            },
            "kind": "app",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Cache/Redis/firewallRules",
            "apiVersion": "2019-07-01",
            "name": "[concat(parameters('Redis_redis_se_2015_043_name'), '/ClientIP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_se_2015_043_name'))]"
            ],
            "properties": {
                "startIP": "112.134.37.214",
                "endIP": "112.134.37.214"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2016-10-01",
            "name": "[concat(parameters('vaults_keyVault_se_2015_043_name'), '/appSettings--connectionStrings--Webapp-se-2015-043')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_keyVault_se_2015_043_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Network/frontdoors",
            "apiVersion": "2020-05-01",
            "name": "[parameters('frontdoors_frontdoor_se_2015_043_name')]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', parameters('frontdoorwebapplicationfirewallpolicies_FirewallPolicySE043_name'))]"
            ],
            "properties": {
                "resourceState": "Enabled",
                "backendPools": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontdoor_se_2015_043_name')), '/BackendPools/backendpool-se-2015-043')]",
                        "name": "backendpool-se-2015-043",
                        "properties": {
                            "backends": [
                                {
                                    "address": "webapp01-se-2015-043.azurewebsites.net",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "webapp01-se-2015-043.azurewebsites.net",
                                    "enabledState": "Enabled"
                                }
                            ],
                            "healthProbeSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontdoor_se_2015_043_name')), '/healthProbeSettings/healthProbeSettings-1596805707757')]"
                            },
                            "loadBalancingSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontdoor_se_2015_043_name')), '/loadBalancingSettings/loadBalancingSettings-1596805707758')]"
                            },
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "healthProbeSettings": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontdoor_se_2015_043_name')), '/HealthProbeSettings/healthProbeSettings-1596805707757')]",
                        "name": "healthProbeSettings-1596805707757",
                        "properties": {
                            "intervalInSeconds": 30,
                            "path": "/",
                            "protocol": "Https",
                            "resourceState": "Enabled",
                            "enabledState": "Enabled",
                            "healthProbeMethod": "Head"
                        }
                    }
                ],
                "frontendEndpoints": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontdoor_se_2015_043_name')), concat('/FrontendEndpoints/', parameters('frontdoors_frontdoor_se_2015_043_name'), '-azurefd-net'))]",
                        "name": "[concat(parameters('frontdoors_frontdoor_se_2015_043_name'), '-azurefd-net')]",
                        "properties": {
                            "hostName": "[concat(parameters('frontdoors_frontdoor_se_2015_043_name'), '.azurefd.net')]",
                            "sessionAffinityEnabledState": "Disabled",
                            "sessionAffinityTtlSeconds": 0,
                            "webApplicationFirewallPolicyLink": {
                                "id": "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', parameters('frontdoorwebapplicationfirewallpolicies_FirewallPolicySE043_name'))]"
                            },
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontdoor_se_2015_043_name')), '/LoadBalancingSettings/loadBalancingSettings-1596805707758')]",
                        "name": "loadBalancingSettings-1596805707758",
                        "properties": {
                            "additionalLatencyMilliseconds": 0,
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2,
                            "resourceState": "Enabled"
                        }
                    }
                ],
                "routingRules": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontdoor_se_2015_043_name')), '/RoutingRules/routingRule-se-2015-043')]",
                        "name": "routingRule-se-2015-043",
                        "properties": {
                            "frontendEndpoints": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontdoor_se_2015_043_name')), concat('/frontendEndpoints/', parameters('frontdoors_frontdoor_se_2015_043_name'), '-azurefd-net'))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled",
                            "resourceState": "Enabled",
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', parameters('frontdoors_frontdoor_se_2015_043_name')), '/backendPools/backendpool-se-2015-043')]"
                                }
                            }
                        }
                    }
                ],
                "backendPoolsSettings": {
                    "enforceCertificateNameCheck": "Enabled",
                    "sendRecvTimeoutSeconds": 30
                },
                "enabledState": "Enabled",
                "friendlyName": "[parameters('frontdoors_frontdoor_se_2015_043_name')]"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/Default')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2019-06-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043')]",
            "location": "southeastasia",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 5
            },
            "kind": "v12.0,user",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "readReplicaCount": 0,
                "storageAccountType": "GRS"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/master/Default')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/master/Default')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/master/current')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "status": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/ClientIPAddress_2020-8-8_13-46-2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "startIpAddress": "112.134.37.214",
                "endIpAddress": "112.134.37.214"
            }
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2015-05-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/vulnerabilityAssessments",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                },
                "storageContainerPath": "[parameters('vulnerabilityAssessments_Default_storageContainerPath')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccount043_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccount043_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccount043_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccount043_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_function_se_2015_043_name')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AppServicePlan_se_2015_043_name'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_function_se_2015_043_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_function_se_2015_043_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AppServicePlan_se_2015_043_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_webApp01_se_2015_043_name')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AppServicePlan_se_2015_043_name'))]"
            ],
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "webapp01-se-2015-043.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "webapp01-se-2015-043.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AppServicePlan_se_2015_043_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_webApp02_se_2015_043_name')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AppServicePlan_se_2015_043_name'))]"
            ],
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "webapp02-se-2015-043.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "webapp02-se-2015-043.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AppServicePlan_se_2015_043_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_function_se_2015_043_name'), '/web')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function_se_2015_043_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$function-se-2015-043",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "https://functions.azure.com",
                        "https://functions-staging.azure.com",
                        "https://functions-next.azure.com"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_webApp01_se_2015_043_name'), '/web')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webApp01_se_2015_043_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$webApp01-se-2015-043",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_webApp02_se_2015_043_name'), '/web')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webApp02_se_2015_043_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$webApp02-se-2015-043",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_function_se_2015_043_name'), '/TriggerToStoreFiles')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function_se_2015_043_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://function-se-2015-043.azurewebsites.net/admin/vfs/site/wwwroot/TriggerToStoreFiles/",
                "script_href": "https://function-se-2015-043.azurewebsites.net/admin/vfs/site/wwwroot/TriggerToStoreFiles/run.csx",
                "config_href": "https://function-se-2015-043.azurewebsites.net/admin/vfs/site/wwwroot/TriggerToStoreFiles/function.json",
                "href": "https://function-se-2015-043.azurewebsites.net/admin/functions/TriggerToStoreFiles",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_function_se_2015_043_name'), '/', parameters('sites_function_se_2015_043_name'), '.azurewebsites.net')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_function_se_2015_043_name'))]"
            ],
            "properties": {
                "siteName": "function-se-2015-043",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_webApp01_se_2015_043_name'), '/', parameters('sites_webApp01_se_2015_043_name'), '.azurewebsites.net')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webApp01_se_2015_043_name'))]"
            ],
            "properties": {
                "siteName": "webApp01-se-2015-043",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_webApp02_se_2015_043_name'), '/', parameters('sites_webApp02_se_2015_043_name'), '.azurewebsites.net')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_webApp02_se_2015_043_name'))]"
            ],
            "properties": {
                "siteName": "webApp02-se-2015-043",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___functionappinsights_se_2015_043_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_functionAppInsights_se_2015_043_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_functionAppInsights_se_2015_043_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___webapp01_insights__se_2105_043_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_webApp01_insights__se_2105_043_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_webApp01_insights__se_2105_043_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___webapp02insights_se_2015_043_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_webApp02insights_se_2015_043_name'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[resourceId('microsoft.insights/components', parameters('components_webApp02insights_se_2015_043_name'))]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/CreateIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/DbParameterization')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/DefragmentIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/DropIndex')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/Default')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2017-10-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "retentionDays": 7
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "retentionDays": 0,
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000",
                "isAzureMonitorTargetEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/Default')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2018-06-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/current')]",
            "location": "Southeast Asia",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "status": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2017-03-01-preview",
            "name": "[concat(parameters('servers_server_se_2015_043_name'), '/DB-se-2015-043/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('servers_server_se_2015_043_name'), 'DB-se-2015-043')]",
                "[resourceId('Microsoft.Sql/servers', parameters('servers_server_se_2015_043_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccount043_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccount043_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccount043_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccount043_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccount043_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccount043_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_storageaccount043_name'), '/default/outcontainer')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccount043_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccount043_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        }
    ]
}